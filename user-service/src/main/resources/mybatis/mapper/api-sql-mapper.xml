<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.snow.springcloud.userservice.mapper.APIMapper">
    <resultMap id="resultBaseMap" type="io.snow.model.vo.ApiVo">
        <id property="id" column="id"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="last_modified_by" jdbcType="VARCHAR" property="lastModifiedBy"/>
        <result column="last_modified_date" jdbcType="TIMESTAMP" property="lastModifiedDate"/>
    </resultMap>
    <select id="selectById"  resultMap="resultBaseMap" parameterType = "java.lang.Long">
        SELECT
        a.*
        FROM
        api_entity a
        WHERE
        a.`id` = #{id}
    </select>
    <select id="selectByPath" resultMap="resultBaseMap" parameterType="java.lang.String">
        select a.* from api_entity a where a.`path` = #{path,jdbcType=VARCHAR}
    </select>
    <select id="selectByDesc" resultMap="resultBaseMap" parameterType="java.lang.String">
        select a.*
        from api_entity a
        where a.description like concat('%',#{desc},'%')
        or a.path like concat('%',#{desc},'%')
    </select>
    <select id="findApiEntityPageable" resultMap="resultBaseMap">
        select a.* from api_entity a order by a.id
    </select>
    <update id="updateApiVo" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="io.snow.model.vo.ApiVo">
        update api_entity
        <set>
            <if test="path != null">path=#{path},</if>
            <if test="description != null">description=#{description},</if>
            <if test="lastModifiedDate != null">last_modified_date=#{lastModifiedDate},</if>
            <if test="lastModifiedBy != null">last_modified_by=#{lastModifiedBy}</if>
        </set>
        where id=#{id}
    </update>
    <insert id="insertApiEntity" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="io.snow.model.vo.ApiVo">
        INSERT INTO api_entity(
        path ,
        description ,
        created_by ,
        last_modified_by ,
        created_date ,
        last_modified_date ,
        type
        )
        VALUES
        (
        #{path},
        #{description},
        #{createdBy},
        #{lastModifiedBy},
        #{createdDate},
        #{lastModifiedDate},
        #{type}
        )
    </insert>
</mapper>